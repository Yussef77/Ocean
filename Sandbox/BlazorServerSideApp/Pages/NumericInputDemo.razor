@page "/numericInputDemo"
@inherits NumericInputDemoBase
@using Oceanware.Ocean.Blazor
@using System.Globalization

<h1>Numeric Input Demo</h1>

<p>The OceanNumericInput is a replacement for the stock NumericInput component.</p>
<p>This component supports binding to Int16, Int16?, Int32, Int32?, Int64, Int64?, Single, Single?, Double, Double?, Decimal, and Decimal? data types.</p>
<p>This component has a FormatString property, set as required.</p>
<p>Displays culture-specific numeric separator, digits separator, and negative sign.</p>
<p>For a great validation experience try the Ocean validators.</p>

<EditForm Model="Numerics" OnValidSubmit="HandleValidSubmit">
    <OceanValidator />
    <ValidationSummary />

    <h3>Binding To Non-Nullable Properties</h3>
    <p>
        <label for="age">Age (Int16, default 32, max length 3, validation greater than zero)</label>
        <OceanNumericInput placeholder="Age" maxlength="3" Class="form-control" id="age" @bind-Value="Numerics.Age" />
        <ValidationMessage For="(() => Numerics.Age)" />
    </p>
    <p>
        <label for="count">Count (Int32, default 5000, max length 10, FormatString N0)</label>
        <OceanNumericInput FormatString="N0" placeholder="Count" maxlength="10" Class="form-control" id="count" @bind-Value="Numerics.Count" />
        <ValidationMessage For="(() => Numerics.Count)" />
    </p>
    <p>
        <label for="bigCount">BigCount (Int64, default 104587, max length 12, FormatString N0)</label>
        <OceanNumericInput FormatString="N0" placeholder="Big Count" maxlength="12" Class="form-control" id="bigCount" @bind-Value="Numerics.BigCount" />
        <ValidationMessage For="(() => Numerics.BigCount)" />
    </p>
    <p>
        <label for="extendedPrice">Extended Price (Decimal, default 1234.99, max length 12, FormatString N, validation greater than equal to zero)</label>
        <div class="input-group">
            <div class="input-group-prepend">
                <span class="input-group-text">@(NumberFormatInfo.CurrentInfo.CurrencySymbol)</span>
            </div>
            <OceanNumericInput FormatString="N2" NumberOfDecimalPlaces="2" placeholder="Extended Price" maxlength="12" Class="form-control" id="extendedPrice" @bind-Value="Numerics.ExtendedPrice" />
        </div>
        <ValidationMessage For="(() => Numerics.ExtendedPrice)" />
    </p>
    <p>
        <label for="price">Price (Single, default 2.99, max length 10, FormatString N, validation greater than equal to zero)</label>
        <div class="input-group">
            <div class="input-group-prepend">
                <span class="input-group-text">@(NumberFormatInfo.CurrentInfo.CurrencySymbol)</span>
            </div>
            <OceanNumericInput FormatString="N" NumberOfDecimalPlaces="2" placeholder="Price" maxlength="10" Class="form-control" id="price" @bind-Value="Numerics.Price" />
        </div>
        <ValidationMessage For="(() => Numerics.Price)" />
    </p>
    <p>
        <label for="revenue">Revenue (Double, default 25987.87, max length 10, FormatString N, validation greater than equal to zero)</label>
        <div class="input-group">
            <div class="input-group-prepend">
                <span class="input-group-text">@(NumberFormatInfo.CurrentInfo.CurrencySymbol)</span>
            </div>
            <OceanNumericInput FormatString="N" NumberOfDecimalPlaces="2" placeholder="Revenue" maxlength="10" Class="form-control" id="revenue" @bind-Value="Numerics.Revenue" />
        </div>
        <ValidationMessage For="(() => Numerics.Revenue)" />
    </p>


    <h3>Binding To Nullable Properties</h3>
    <p>
        <label for="possibleAge">Age (Int16?, default null, max length 3, validation if supplied greater than zero)</label>
        <OceanNumericInput placeholder="Age" maxlength="3" Class="form-control" id="possibleAge" @bind-Value="Numerics.PossibleAge" />
        <ValidationMessage For="(() => Numerics.PossibleAge)" />
    </p>
    <p>
        <label for="possibleCount">Count (Int32?, default null, max length 10, FormatString N0)</label>
        <OceanNumericInput FormatString="N0" placeholder="Count" maxlength="10" Class="form-control" id="possibleCount" @bind-Value="Numerics.PossibleCount" />
        <ValidationMessage For="(() => Numerics.PossibleCount)" />
    </p>
    <p>
        <label for="possibleBigCount">BigCount (Int64?, default null, max length 12, FormatString N0)</label>
        <OceanNumericInput FormatString="N0" placeholder="Big Count" maxlength="12" Class="form-control" id="possibleBigCount" @bind-Value="Numerics.PossibleBigCount" />
        <ValidationMessage For="(() => Numerics.PossibleBigCount)" />
    </p>
    <p>
        <label for="possibleExtendedPrice">Extended Price (Decimal?, default null, max length 12, FormatString N, validation if supplied greater than equal to zero)</label>
        <div class="input-group">
            <div class="input-group-prepend">
                <span class="input-group-text">@(NumberFormatInfo.CurrentInfo.CurrencySymbol)</span>
            </div>
            <OceanNumericInput FormatString="N" NumberOfDecimalPlaces="2" placeholder="Extended Price" maxlength="12" Class="form-control" id="possibleExtendedPrice" @bind-Value="Numerics.PossibleExtendedPrice" />
        </div>
        <ValidationMessage For="(() => Numerics.PossibleExtendedPrice)" />
    </p>
    <p>
        <label for="possiblePrice">Price (Single?, default null, max length 10, FormatString N, validation if supplied greater than equal to zero)</label>
        <div class="input-group">
            <div class="input-group-prepend">
                <span class="input-group-text">@(NumberFormatInfo.CurrentInfo.CurrencySymbol)</span>
            </div>
            <OceanNumericInput FormatString="N" NumberOfDecimalPlaces="2" placeholder="Price" maxlength="10" Class="form-control" id="possiblePrice" @bind-Value="Numerics.PossiblePrice" />
        </div>
        <ValidationMessage For="(() => Numerics.PossiblePrice)" />
    </p>
    <p>
        <label for="possibleRevenue">Revenue (Double?, default null, max length 10, FormatString N, validation if supplied greater than equal to zero)</label>
        <div class="input-group">
            <div class="input-group-prepend">
                <span class="input-group-text">@(NumberFormatInfo.CurrentInfo.CurrencySymbol)</span>
            </div>
            <OceanNumericInput FormatString="N" NumberOfDecimalPlaces="2" placeholder="Revenue" maxlength="10" Class="form-control" id="possibleRevenue" @bind-Value="Numerics.PossibleRevenue" />
        </div>
        <ValidationMessage For="(() => Numerics.PossibleRevenue)" />
    </p>

    <button style="margin-bottom: 30px;" type="submit">Display Model Values</button>

    @if (ShowModelNameValues) {
        <div class="result">
            <table cellpadding="5">
                <thead>
                    <tr>
                        <th>Property Name</th>
                        <th>Property Value</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in GetModelNameValues()) {
                        <tr>
                            <td>@item.Name</td>
                            <td>@item.Value</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <button @onclick="ClearValuesClicked">Clear Model Values</button>
    }
</EditForm>
